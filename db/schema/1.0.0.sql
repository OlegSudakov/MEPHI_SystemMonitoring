CREATE TABLE INSTANCE
(
  ID    BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME  VARCHAR(128) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE INSTANCE_GROUP
(
  ID    BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME  VARCHAR(128) NOT NULL UNIQUE ,
  PRIMARY KEY (ID)
);

CREATE TABLE INSTANCE_GROUP_INSTANCE
(
  INSTANCE_GROUP_ID BIGINT(19) NOT NULL,
  INSTANCE_ID       BIGINT(19) NOT NULL,
  PRIMARY KEY (INSTANCE_GROUP_ID, INSTANCE_ID)
);

CREATE TABLE AGENT
(
  ID          BIGINT(19) NOT NULL AUTO_INCREMENT,
  INSTANCE_ID BIGINT(19) NOT NULL,
  E_TYPE      TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE LINUX_AGENT
(
  ID      BIGINT(19) NOT NULL,
  HOST    VARCHAR(128) NOT NULL,
  PORT    INT(5) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE DATA_TYPE
(
  ID  BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(128) NOT NULL UNIQUE,
  PRIMARY KEY (ID)
);

CREATE TABLE METRIC_TYPE
(
  ID            BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME          VARCHAR(128) NOT NULL UNIQUE,
  DATA_TYPE_ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE METRIC
(
  ID              BIGINT(19) NOT NULL AUTO_INCREMENT,
  METRIC_TYPE_ID  BIGINT(19) NOT NULL,
  STORING_PERIOD  BIGINT(19),
  CRON            VARCHAR(256),
  E_TYPE          TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE CALCULABLE_METRIC
(
  ID                BIGINT(19) NOT NULL,
  METRIC_FORMULA_ID BIGINT(19) NOT NULL,
  INSTANCE_ID       BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE COLLECTIBLE_METRIC
(
  ID         BIGINT(19) NOT NULL AUTO_INCREMENT,
  AGENT_ID   BIGINT(19) NOT NULL,
  PARAMETERS BLOB NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE DOUBLE_MEASURE
(
  METRIC_ID BIGINT(19) NOT NULL,
  TIME      TIMESTAMP NOT NULL,
  VALUE     DOUBLE NOT NULL,
  PRIMARY KEY (METRIC_ID, TIME)
);

CREATE TABLE FLOAT_MEASURE
(
  METRIC_ID BIGINT(19) NOT NULL,
  TIME      TIMESTAMP NOT NULL,
  VALUE     FLOAT NOT NULL,
  PRIMARY KEY (METRIC_ID, TIME)
);

CREATE TABLE BOOLEAN_MEASURE
(
  METRIC_ID BIGINT(19) NOT NULL,
  TIME      TIMESTAMP NOT NULL,
  VALUE     TINYINT(1) NOT NULL,
  PRIMARY KEY (METRIC_ID, TIME)
);

CREATE TABLE LONG_MEASURE
(
  METRIC_ID BIGINT(19) NOT NULL,
  TIME      TIMESTAMP NOT NULL,
  VALUE     BIGINT(19) NOT NULL,
  PRIMARY KEY (METRIC_ID, TIME)
);

CREATE TABLE INTEGER_MEASURE
(
  METRIC_ID BIGINT(19) NOT NULL,
  TIME      TIMESTAMP NOT NULL,
  VALUE     INT(10) NOT NULL,
  PRIMARY KEY (METRIC_ID, TIME)
);

CREATE TABLE FORMULA
(
  ID      BIGINT(19) NOT NULL AUTO_INCREMENT,
  FORMULA BLOB NOT NULL,
  E_TYPE  TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE METRIC_FORMULA
(
  ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE RULE_FORMULA
(
  ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE FORMULA_METRIC
(
  FORMULA_ID BIGINT(19) NOT NULL,
  METRIC_ID   BIGINT(19) NOT NULL,
  PRIMARY KEY (FORMULA_ID, METRIC_ID)
);

CREATE TABLE PRIORITY
(
  ID BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(128) NOT NULL UNIQUE,
  PRIORITY BIGINT(19) NOT NULL UNIQUE,
  PRIMARY KEY (ID)
);

CREATE TABLE RULE
(
  ID              BIGINT(19) NOT NULL AUTO_INCREMENT,
  RULE_FORMULA_ID BIGINT(19) NOT NULL,
  PRIORITY_ID     BIGINT(19) NOT NULL,
  E_TYPE          TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE FAST_RULE
(
  ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SCHEDULED_RULE
(
  ID    BIGINT(19) NOT NULL,
  CRON  VARCHAR(256) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE RULE_CHECK_RESULT
(
  ID      BIGINT(19) NOT NULL AUTO_INCREMENT,
  RULE_ID BIGINT(19) NOT NULL,
  TIME    TIMESTAMP NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE REACTION_TERMPLATE
(
  ID      BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME    VARCHAR(256) NOT NULL,
  E_TYPE  TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE ALERT_TEMPLATE
(
  ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE EMAIL_TEMPLATE
(
  ID        BIGINT(19) NOT NULL,
  SUBJECT   VARCHAR(256) NOT NULL,
  TEMPLATE  VARCHAR(2048) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SMS_TEMPLATE
(
  ID        BIGINT(19) NOT NULL,
  TEMPLATE  VARCHAR(2048) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE RULE_REACTION_TEMPLATE
(
  RULE_ID               BIGINT(19) NOT NULL,
  REACTION_TEMPLATE_ID  BIGINT(19) NOT NULL,
  PRIMARY KEY (RULE_ID, REACTION_TEMPLATE_ID)
);

CREATE TABLE REACTION
(
  ID                    BIGINT(19) NOT NULL AUTO_INCREMENT,
  RULE_CHECK_RESULT_ID  BIGINT(19) NOT NULL,
  REACTION_TEMPLATE_ID  BIGINT(19) NOT NULL,
  E_TYPE                TINYINT(2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE ALERT
(
  ID BIGINT(19) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE EMAIL
(
  ID      BIGINT(19) NOT NULL,
  SUBJECT VARCHAR(256) NOT NULL,
  TEXT    VARCHAR(4096) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE SMS
(
  ID    BIGINT(19) NOT NULL,
  TEXT  VARCHAR(4096) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE USER
(
  ID        BIGINT(19) NOT NULL AUTO_INCREMENT,
  NICKNAME  VARCHAR(128) NOT NULL UNIQUE,
  FULLNAME  VARCHAR(256) NOT NULL,
  EMAIL     VARCHAR(128) NOT NULL,
  PHONE     VARCHAR(128) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE USER_SETTING
(
  USER_ID BIGINT(19) NOT NULL,
  `KEY`   VARCHAR(128) NOT NULL,
  VALUE   BLOB,
  PRIMARY KEY (USER_ID, `KEY`)
);

CREATE TABLE USER_GROUP
(
  ID    BIGINT(19) NOT NULL AUTO_INCREMENT,
  NAME  VARCHAR(128) NOT NULL UNIQUE,
  PRIMARY KEY (ID)
);

CREATE TABLE USER_GROUP_USER
(
  USER_GROUP_ID BIGINT(19) NOT NULL,
  USER_ID       BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_GROUP_ID, USER_ID)
);

CREATE TABLE USER_GROUP_ALERT_TEMPLATE
(
  USER_GROUP_ID     BIGINT(19) NOT NULL,
  ALERT_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_GROUP_ID, ALERT_TEMPLATE_ID)
);

CREATE TABLE USER_ALERT_TEMPLATE
(
  USER_ID           BIGINT(19) NOT NULL,
  ALERT_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_ID, ALERT_TEMPLATE_ID)
);

CREATE TABLE USER_GROUP_EMAIL_TEMPLATE
(
  USER_GROUP_ID     BIGINT(19) NOT NULL,
  EMAIL_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_GROUP_ID, EMAIL_TEMPLATE_ID)
);

CREATE TABLE USER_EMAIL_TEMPLATE
(
  USER_ID           BIGINT(19) NOT NULL,
  EMAIL_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_ID, EMAIL_TEMPLATE_ID)
);

CREATE TABLE USER_GROUP_SMS_TEMPLATE
(
  USER_GROUP_ID     BIGINT(19) NOT NULL,
  SMS_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_GROUP_ID, SMS_TEMPLATE_ID)
);

CREATE TABLE USER_SMS_TEMPLATE
(
  USER_ID           BIGINT(19) NOT NULL,
  SMS_TEMPLATE_ID BIGINT(19) NOT NULL,
  PRIMARY KEY (USER_ID, SMS_TEMPLATE_ID)
);

ALTER TABLE INSTANCE
ADD INDEX IDX_INSTANCE_NAME (NAME);

ALTER TABLE INSTANCE_GROUP_INSTANCE
ADD CONSTRAINT FK_INSTANCE_GROUP FOREIGN KEY (INSTANCE_GROUP_ID) REFERENCES INSTANCE_GROUP (ID),
ADD CONSTRAINT FK_INSTANCE FOREIGN KEY (INSTANCE_ID) REFERENCES INSTANCE (ID);

ALTER TABLE AGENT
ADD CONSTRAINT FK_AGENT_INSTANCE FOREIGN KEY (INSTANCE_ID) REFERENCES INSTANCE (ID);

ALTER TABLE LINUX_AGENT
ADD CONSTRAINT FK_LINUX_AGENT_AGENT FOREIGN KEY (ID) REFERENCES AGENT (ID);

ALTER TABLE METRIC
ADD CONSTRAINT FK_MEASURE_METRIC_TYPE FOREIGN KEY (METRIC_TYPE_ID) REFERENCES METRIC_TYPE (ID);

ALTER TABLE DATA_TYPE
ADD INDEX IDX_DATA_TYPE_NAME (NAME);

ALTER TABLE METRIC_TYPE
ADD INDEX IDX_METRIC_TYPE_NAME (NAME),
ADD CONSTRAINT FK_METRIC_DATA_TYPE FOREIGN KEY (DATA_TYPE_ID) REFERENCES DATA_TYPE (ID);

ALTER TABLE CALCULABLE_METRIC
ADD CONSTRAINT FK_CALC_METRIC_METRIC FOREIGN KEY (ID) REFERENCES METRIC (ID);

ALTER TABLE CALCULABLE_METRIC
ADD CONSTRAINT FK_CALC_METRIC_INSTANCE FOREIGN KEY (INSTANCE_ID) REFERENCES INSTANCE (ID);

ALTER TABLE CALCULABLE_METRIC
ADD CONSTRAINT FK_CALC_METRIC_METRIC_FORMULA FOREIGN KEY (METRIC_FORMULA_ID) REFERENCES METRIC_FORMULA (ID);

ALTER TABLE COLLECTIBLE_METRIC
ADD CONSTRAINT FK_COLL_METRIC_METRIC FOREIGN KEY (ID) REFERENCES METRIC (ID);

ALTER TABLE COLLECTIBLE_METRIC
ADD CONSTRAINT FK_COLL_METRIC_AGENT FOREIGN KEY (AGENT_ID) REFERENCES AGENT (ID);

ALTER TABLE DOUBLE_MEASURE
ADD CONSTRAINT FK_DOUBLE_MEASURE_METRIC_ID FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE FLOAT_MEASURE
ADD CONSTRAINT FK_FLOAT_MEASURE_METRIC_ID FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE BOOLEAN_MEASURE
ADD CONSTRAINT FK_BOOLEAN_MEASURE_METRIC_ID FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE LONG_MEASURE
ADD CONSTRAINT FK_LONG_MEASURE_METRIC_ID FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE INTEGER_MEASURE
ADD CONSTRAINT FK_INTEGER_MEASURE_METRIC_ID FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE FORMULA_METRIC
ADD CONSTRAINT FK_FORMULA_METRIC_METRIC FOREIGN KEY (METRIC_ID) REFERENCES METRIC (ID);

ALTER TABLE FORMULA_METRIC
ADD CONSTRAINT FK_FORMULA_METRIC_FORMULA FOREIGN KEY (FORMULA_ID) REFERENCES FORMULA (ID);

ALTER TABLE METRIC_FORMULA
ADD CONSTRAINT FK_METRIC_FORMULA_FORMULA FOREIGN KEY (ID) REFERENCES FORMULA (ID);

ALTER TABLE RULE_FORMULA
ADD CONSTRAINT FK_RULE_FORMULA_FORMULA FOREIGN KEY (ID) REFERENCES FORMULA (ID);

ALTER TABLE PRIORITY
ADD INDEX IDX_PRIORITY_NAME (NAME),
ADD INDEX IDX_PRIORITY_PRIORITY (PRIORITY);

ALTER TABLE RULE
ADD CONSTRAINT FK_RULE_PRIORITY FOREIGN KEY (PRIORITY_ID) REFERENCES PRIORITY (ID);

ALTER TABLE RULE
ADD CONSTRAINT FK_RULE_RULE_FORMULA FOREIGN KEY (RULE_FORMULA_ID) REFERENCES RULE_FORMULA (ID);

ALTER TABLE FAST_RULE
ADD CONSTRAINT FK_FAST_RULE_RULE FOREIGN KEY (ID) REFERENCES RULE (ID);

ALTER TABLE SCHEDULED_RULE
ADD CONSTRAINT FK_SCHEDULED_RULE_RULE FOREIGN KEY (ID) REFERENCES RULE (ID);

ALTER TABLE RULE_CHECK_RESULT
ADD INDEX IDX_RULE_CHECK_RESULT_TIME (TIME),
ADD CONSTRAINT FK_RULE_CHECK_RESULT_RULE FOREIGN KEY (RULE_ID) REFERENCES RULE (ID);

ALTER TABLE REACTION_TERMPLATE
ADD INDEX IDX_REACTION_TEMPLATE_NAME (NAME);

ALTER TABLE ALERT_TEMPLATE
ADD CONSTRAINT FK_ALERT_TEMPLATE_REACTION_TEMPLATE FOREIGN KEY (ID) REFERENCES REACTION_TERMPLATE (ID);

ALTER TABLE EMAIL_TEMPLATE
ADD CONSTRAINT FK_EMAIL_TEMPLATE_REACTION_TEMPLATE FOREIGN KEY (ID) REFERENCES REACTION_TERMPLATE (ID);

ALTER TABLE SMS_TEMPLATE
ADD CONSTRAINT FK_SMS_TEMPLATE_REACTION_TEMPLATE FOREIGN KEY (ID) REFERENCES REACTION_TERMPLATE (ID);

ALTER TABLE ALERT
ADD CONSTRAINT FK_ALERT_REACTION FOREIGN KEY (ID) REFERENCES REACTION (ID);

ALTER TABLE EMAIL
ADD CONSTRAINT FK_EMAIL_REACTION FOREIGN KEY (ID) REFERENCES REACTION (ID);

ALTER TABLE SMS
ADD CONSTRAINT FK_SMS_REACTION FOREIGN KEY (ID) REFERENCES REACTION (ID);

ALTER TABLE RULE_REACTION_TEMPLATE
ADD CONSTRAINT FK_RULE_REACTION_TEMPLATE_RULE FOREIGN KEY (RULE_ID) REFERENCES RULE (ID);

ALTER TABLE RULE_REACTION_TEMPLATE
ADD CONSTRAINT FK_RULE_REACTION_TEMPLATE_REACTION_TEMPLATE FOREIGN KEY (REACTION_TEMPLATE_ID) REFERENCES REACTION_TERMPLATE (ID);

ALTER TABLE USER
ADD INDEX IDX_USER_NICKNAME (NICKNAME),
ADD INDEX IDX_USER_EMAIL (EMAIL),
ADD INDEX IDX_USER_PHONE (PHONE);

ALTER TABLE USER_SETTING
ADD CONSTRAINT FK_USER_SETTING_USER FOREIGN KEY (USER_ID) REFERENCES USER (ID);

ALTER TABLE USER_GROUP
ADD INDEX IDX_USER_GROUP_NAME (NAME);

ALTER TABLE USER_GROUP_USER
ADD CONSTRAINT FK_USER_GROUP_USER_USER FOREIGN KEY (USER_ID) REFERENCES USER (ID);

ALTER TABLE USER_GROUP_USER
ADD CONSTRAINT FK_USER_GROUP_USER_USER_GROUP FOREIGN KEY (USER_GROUP_ID) REFERENCES USER (ID);

ALTER TABLE USER_GROUP_ALERT_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_ALERT_TEMPLATE_USER_GROUP FOREIGN KEY (USER_GROUP_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_GROUP_ALERT_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_ALERT_TEMPLATE_ALERT_TEMPLATE FOREIGN KEY (ALERT_TEMPLATE_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_ALERT_TEMPLATE
ADD CONSTRAINT FK_USER_ALERT_TEMPLATE_USER FOREIGN KEY (USER_ID) REFERENCES USER (ID);

ALTER TABLE USER_ALERT_TEMPLATE
ADD CONSTRAINT FK_USER_ALERT_TEMPLATE_ALERT_TEMPLATE FOREIGN KEY (ALERT_TEMPLATE_ID) REFERENCES USER (ID);

ALTER TABLE USER_GROUP_EMAIL_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_EMAIL_TEMPLATE_USER_GROUP FOREIGN KEY (USER_GROUP_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_GROUP_EMAIL_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_EMAIL_TEMPLATE_EMAIL_TEMPLATE FOREIGN KEY (EMAIL_TEMPLATE_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_EMAIL_TEMPLATE
ADD CONSTRAINT FK_USER_EMAIL_TEMPLATE_USER FOREIGN KEY (USER_ID) REFERENCES USER (ID);

ALTER TABLE USER_EMAIL_TEMPLATE
ADD CONSTRAINT FK_USER_EMAIL_TEMPLATE_EMAIL_TEMPLATE FOREIGN KEY (EMAIL_TEMPLATE_ID) REFERENCES USER (ID);

ALTER TABLE USER_GROUP_SMS_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_SMS_TEMPLATE_USER_GROUP FOREIGN KEY (USER_GROUP_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_GROUP_SMS_TEMPLATE
ADD CONSTRAINT FK_USER_GROUP_SMS_TEMPLATE_SMS_TEMPLATE FOREIGN KEY (SMS_TEMPLATE_ID) REFERENCES USER_GROUP (ID);

ALTER TABLE USER_SMS_TEMPLATE
ADD CONSTRAINT FK_USER_SMS_TEMPLATE_USER FOREIGN KEY (USER_ID) REFERENCES USER (ID);

ALTER TABLE USER_SMS_TEMPLATE
ADD CONSTRAINT FK_USER_SMS_TEMPLATE_SMS_TEMPLATE FOREIGN KEY (SMS_TEMPLATE_ID) REFERENCES USER (ID);

INSERT INTO DATA_TYPE(NAME) VALUES ('BOOLEAN');
INSERT INTO DATA_TYPE(NAME) VALUES ('INTEGER');
INSERT INTO DATA_TYPE(NAME) VALUES ('LONG');
INSERT INTO DATA_TYPE(NAME) VALUES ('FLOAT');
INSERT INTO DATA_TYPE(NAME) VALUES ('DOUBLE');

INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU user utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU nice utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU sys utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU iowait utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU irq utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU soft utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU steal utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU guest utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU gnice utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('CPU idle utilization', 4);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('Memory total', 2);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('Memory free', 2);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('Swap total', 2);
INSERT INTO METRIC_TYPE (NAME, DATA_TYPE_ID) VALUES ('Swap free', 2);